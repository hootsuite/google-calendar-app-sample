{
  "openapi": "3.0.0",
  "info": {
    "description": "Generic IDL for planned content apps in app directory",
    "title": "Hootsuite Apps API",
    "version": "1.4.0"
  },
  "servers": [
    {
      "url": "https://api.example.com"
    }
  ],
  "tags": [
    {
      "description": "Endpoints that need to be implemented to support OAuth2",
      "name": "OAuth2"
    },
    {
      "name": "Media",
      "description": "Endpoints to perform actions on Media"
    },
    {
      "description": "Endpoints that need to implemented to support planned content",
      "name": "PlannedContent"
    },
    {
      "description": "Endpoints for status checks",
      "name": "Status"
    }
  ],
  "paths": {
    "/oauth2/authorize": {
      "get": {
        "description": "<p> <a href='https://tools.ietf.org/html/rfc6749#section-3.1'>OAuth2 Authorize</a> endpoint. Please note that this authorization url is configured in the developer portal. </p>",
        "operationId": "OAuth2Authorize",
        "parameters": [
          {
            "in": "query",
            "name": "response_type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "redirect_uri",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "state",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "scope",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad request."
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "OAuth2 Authorization",
        "tags": [
          "OAuth2"
        ]
      }
    },
    "/oauth2/token": {
      "post": {
        "description": "<p> <a href='https://tools.ietf.org/html/rfc6749#section-3.2'>OAuth2 Token</a> endpoint. Please note that this authorization url is configured in the developer portal. The required parameters depend on the grant type requested: </p>\n<p>Authorization Code:</p> <ul> <li>grant_type: authorization_code</li> <li>client_id</li> <li>client_secret</li> <li>code</li> <li>redirect_uri</li> </ul>\n<p>Refresh Token</p> <ul> <li>grant_type: refresh_token</li> <li>client_id </li> <li>client_secret </li> <li>refresh_token </li> </ul>",
        "operationId": "Oauth2Token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequestPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "Bad request."
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Oauth2 token endpoint",
        "tags": [
          "OAuth2"
        ]
      }
    },
    "/v1/media": {
      "get": {
        "description": "Retrieve media content and optionally filter by search criteria and mediaType. If no parameters are given, the app should return either the contents of the base folder if it has a folder hierarchy or trending/popular media results otherwise.",
        "operationId": "GetMedia",
        "summary": "Retrieve media",
        "tags": [
          "Media"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "\"Authorization token that allows Hootsuite to issue commands on a user's behalf. <br/>\nThe payload will look like `Bearer {auth_token}`\"\nexample: \"Bearer ahsi1jdi2kcnwjxlo10\"\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mediaType",
            "description": "Search filter to only get results of a specific type.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "AnimatedGif",
                "Image",
                "Video",
                "Folder"
              ]
            }
          },
          {
            "in": "query",
            "name": "parentId",
            "description": "The ID of the parent (like a folder) that you want to get the children of.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cursor",
            "description": "A developer-defined string returned by a previous call to this endpoint. Used to return another set of results for a given search query. All params from the previous request must be encoded in the cursor, so that a subsequent call can be made with only the cursor as a param to return the next or previous set of results.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/planned-content": {
      "get": {
        "description": "This endpoint returns planned content items based on the provided parameters.",
        "operationId": "GetPlannedContent",
        "summary": "Retrieve planned content",
        "tags": [
          "PlannedContent"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "startDate",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "endDate",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "parentId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlannedContentResponse"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "Bad request."
          },
          "500": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/v1/status": {
      "get": {
        "description": "Handles the status endpoint",
        "operationId": "GetStatus",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad request."
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Get status of server",
        "tags": [
          "Status"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "TokenRequestPayload": {
        "example": {
          "refresh_token": "refresh_token",
          "code": "code",
          "grant_type": "grant_type",
          "redirect_uri": "redirect_uri",
          "client_secret": "client_secret",
          "client_id": "client_id"
        },
        "properties": {
          "grant_type": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "redirect_uri": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TokenResponse": {
        "example": {
          "access_token": "access_token",
          "refresh_token": "refresh_token",
          "token_type": "token_type",
          "expires_in": "expires_in"
        },
        "properties": {
          "access_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "expires_in": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PlannedContentResponse": {
        "example": {
          "data": [
            {
              "attachments": [
                {
                  "subtitles": "subtitles",
                  "subtitleFileName": "subtitleFileName",
                  "thumbnail": {
                    "width": 5,
                    "url": "url",
                    "height": 2
                  },
                  "original": {
                    "sizeInBytes": 5,
                    "width": 6,
                    "url": "url",
                    "height": 1
                  },
                  "durationInSeconds": 0,
                  "name": "name",
                  "mediaType": "mediaType",
                  "id": "id",
                  "mimeType": "mimeType"
                },
                {
                  "subtitles": "subtitles",
                  "subtitleFileName": "subtitleFileName",
                  "thumbnail": {
                    "width": 5,
                    "url": "url",
                    "height": 2
                  },
                  "original": {
                    "sizeInBytes": 5,
                    "width": 6,
                    "url": "url",
                    "height": 1
                  },
                  "durationInSeconds": 0,
                  "name": "name",
                  "mediaType": "mediaType",
                  "id": "id",
                  "mimeType": "mimeType"
                }
              ],
              "author": {
                "firstName": "firstName",
                "lastName": "lastName",
                "avatarUrl": "avatarUrl",
                "id": "id"
              },
              "name": "name",
              "mediaType": "folder",
              "links": [
                "links",
                "links"
              ],
              "dates": {
                "due": "due",
                "created": "created",
                "updated": "updated"
              },
              "id": "id",
              "body": "body",
              "permalink": "permalink",
              "tags": [
                "tags",
                "tags"
              ]
            },
            {
              "attachments": [
                {
                  "subtitles": "subtitles",
                  "subtitleFileName": "subtitleFileName",
                  "thumbnail": {
                    "width": 5,
                    "url": "url",
                    "height": 2
                  },
                  "original": {
                    "sizeInBytes": 5,
                    "width": 6,
                    "url": "url",
                    "height": 1
                  },
                  "durationInSeconds": 0,
                  "name": "name",
                  "mediaType": "mediaType",
                  "id": "id",
                  "mimeType": "mimeType"
                },
                {
                  "subtitles": "subtitles",
                  "subtitleFileName": "subtitleFileName",
                  "thumbnail": {
                    "width": 5,
                    "url": "url",
                    "height": 2
                  },
                  "original": {
                    "sizeInBytes": 5,
                    "width": 6,
                    "url": "url",
                    "height": 1
                  },
                  "durationInSeconds": 0,
                  "name": "name",
                  "mediaType": "mediaType",
                  "id": "id",
                  "mimeType": "mimeType"
                }
              ],
              "author": {
                "firstName": "firstName",
                "lastName": "lastName",
                "avatarUrl": "avatarUrl",
                "id": "id"
              },
              "name": "name",
              "mediaType": "folder",
              "links": [
                "links",
                "links"
              ],
              "dates": {
                "due": "due",
                "created": "created",
                "updated": "updated"
              },
              "id": "id",
              "body": "body",
              "permalink": "permalink",
              "tags": [
                "tags",
                "tags"
              ]
            }
          ],
          "meta": {
            "cursor": "cursor"
          }
        },
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/PlannedContentItem"
            },
            "type": "array"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "PlannedContentItem": {
        "example": {
          "attachments": [
            {
              "subtitles": "subtitles",
              "subtitleFileName": "subtitleFileName",
              "thumbnail": {
                "width": 5,
                "url": "url",
                "height": 2
              },
              "original": {
                "sizeInBytes": 5,
                "width": 6,
                "url": "url",
                "height": 1
              },
              "durationInSeconds": 0,
              "name": "name",
              "mediaType": "mediaType",
              "id": "id",
              "mimeType": "mimeType"
            },
            {
              "subtitles": "subtitles",
              "subtitleFileName": "subtitleFileName",
              "thumbnail": {
                "width": 5,
                "url": "url",
                "height": 2
              },
              "original": {
                "sizeInBytes": 5,
                "width": 6,
                "url": "url",
                "height": 1
              },
              "durationInSeconds": 0,
              "name": "name",
              "mediaType": "mediaType",
              "id": "id",
              "mimeType": "mimeType"
            }
          ],
          "author": {
            "firstName": "firstName",
            "lastName": "lastName",
            "avatarUrl": "avatarUrl",
            "id": "id"
          },
          "name": "name",
          "mediaType": "folder",
          "links": [
            "links",
            "links"
          ],
          "dates": {
            "due": "due",
            "created": "created",
            "updated": "updated"
          },
          "id": "id",
          "body": "body",
          "permalink": "permalink",
          "tags": [
            "tags",
            "tags"
          ]
        },
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "mediaType": {
            "enum": [
              "folder",
              "plannedContent"
            ],
            "type": "string"
          },
          "permalink": {
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "links": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "attachments": {
            "items": {
              "$ref": "#/components/schemas/Attachment"
            },
            "type": "array"
          },
          "author": {
            "$ref": "#/components/schemas/AuthorMetadata"
          },
          "dates": {
            "$ref": "#/components/schemas/Dates"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "Attachment": {
        "example": {
          "subtitles": "subtitles",
          "subtitleFileName": "subtitleFileName",
          "thumbnail": {
            "width": 5,
            "url": "url",
            "height": 2
          },
          "original": {
            "sizeInBytes": 5,
            "width": 6,
            "url": "url",
            "height": 1
          },
          "durationInSeconds": 0,
          "name": "name",
          "mediaType": "mediaType",
          "id": "id",
          "mimeType": "mimeType"
        },
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "mediaType": {
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          },
          "durationInSeconds": {
            "type": "integer"
          },
          "subtitleFileName": {
            "type": "string"
          },
          "subtitles": {
            "type": "string"
          },
          "original": {
            "$ref": "#/components/schemas/ImageMetadata"
          },
          "thumbnail": {
            "$ref": "#/components/schemas/ThumbnailMetadata"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "ImageMetadata": {
        "example": {
          "sizeInBytes": 5,
          "width": 6,
          "url": "url",
          "height": 1
        },
        "properties": {
          "url": {
            "type": "string"
          },
          "width": {
            "type": "integer"
          },
          "height": {
            "type": "integer"
          },
          "sizeInBytes": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ThumbnailMetadata": {
        "example": {
          "width": 5,
          "url": "url",
          "height": 2
        },
        "properties": {
          "url": {
            "type": "string"
          },
          "width": {
            "type": "integer"
          },
          "height": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AuthorMetadata": {
        "example": {
          "firstName": "firstName",
          "lastName": "lastName",
          "avatarUrl": "avatarUrl",
          "id": "id"
        },
        "properties": {
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "avatarUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Dates": {
        "example": {
          "due": "due",
          "created": "created",
          "updated": "updated"
        },
        "properties": {
          "created": {
            "type": "string"
          },
          "updated": {
            "type": "string"
          },
          "due": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Meta": {
        "example": {
          "cursor": "cursor"
        },
        "properties": {
          "cursor": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "MediaResponseEnvelope": {
        "type": "object",
        "required": [
          "data",
          "metadata"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "The media results",
            "items": {
              "$ref": "#/components/schemas/MediaEntryResult"
            }
          },
          "metadata": {
            "type": "object",
            "description": "The metadata response envelope.",
            "required": [
              "cursor"
            ],
            "properties": {
              "cursor": {
                "type": "object",
                "description": "The cursor used to get the next or previous page of results. Should only be absent if there are no results beyond those already returned.",
                "properties": {
                  "next": {
                    "type": "string",
                    "description": "A developer-defined string that can be used as a parameter in the search to get the next set of results for the given search parameters.",
                    "example": "encodedxjatcd83nn39d99093kknext"
                  },
                  "previous": {
                    "type": "string",
                    "description": "A developer-defined string that can be used as a parameter in the search to get the previous set of results for the given search parameters.",
                    "example": "encodedxjatcd83nn39d99093kkprev"
                  }
                }
              }
            }
          }
        }
      },
      "MediaEntryResult": {
        "type": "object",
        "required": [
          "mediaType"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource ID. This field must be included for folders.",
            "example": "12345qqq"
          },
          "name": {
            "type": "string",
            "description": "Resource filename.",
            "example": "my_picture.jpg"
          },
          "mediaType": {
            "type": "string",
            "enum": [
              "AnimatedGif",
              "Image",
              "Folder",
              "Video"
            ],
            "example": "Image"
          },
          "mimeType": {
            "type": "string",
            "description": "This field is optional ONLY in the case where the original.url field ends in an identifiable file extension (such as '.jpg'). In every other case it is required. Regardless of whether the mimeType is included or inferred from the URL, the response must be one of the enumerated mimeTypes.",
            "enum": [
              "image/jpeg",
              "image/png",
              "image/gif",
              "video/mp4",
              "application/vnd.hootsuite.folder"
            ],
            "example": "image/jpeg"
          },
          "original": {
            "$ref": "#/components/schemas/MediaInfo"
          },
          "thumbnail": {
            "$ref": "#/components/schemas/ThumbnailInfo"
          },
          "durationInSeconds": {
            "type": "integer",
            "description": "This field is REQUIRED for videos.",
            "example": 120
          },
          "subtitleFileName": {
            "type": "string",
            "description": "Name for the SubRip subtitles file in the format given here: https://www.facebook.com/help/www/1528795707381162",
            "example": "example.en_US.srt"
          },
          "subtitles": {
            "type": "string",
            "description": "URL to the SubRip subtitles file (max 200kB)",
            "example": "https://imagezzzz.com/my_subtitles.srt"
          },
          "tags": {
            "type": "array",
            "description": "Tags for the image, these may be included in posts when the media item is attached",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MediaInfo": {
        "type": "object",
        "description": "The original media file. This field is required for all files except folders.",
        "required": [
          "url",
          "width",
          "height",
          "sizeInBytes"
        ],
        "properties": {
          "url": {
            "type": "string",
            "description": "URL to the media resource.",
            "example": "https://imagezzzz.com/my_image.jpg"
          },
          "width": {
            "type": "integer",
            "description": "Width in pixels.",
            "example": 200
          },
          "height": {
            "type": "integer",
            "description": "Height in pixels.",
            "example": 200
          },
          "sizeInBytes": {
            "type": "integer",
            "description": "File size in bytes.",
            "example": 300
          }
        }
      },
      "ThumbnailInfo": {
        "type": "object",
        "description": "A smaller thumbnail for display in a selector. This field is REQUIRED for all files except folders.",
        "required": [
          "url",
          "width",
          "height"
        ],
        "properties": {
          "url": {
            "type": "string",
            "description": "URL to the thumbnail.",
            "example": "https://imagezzzz.com/my_image_small.jpg"
          },
          "width": {
            "type": "integer",
            "description": "Width in pixels.",
            "example": 100
          },
          "height": {
            "type": "integer",
            "description": "Height in pixels.",
            "example": 100
          }
        }
      }
    }
  }
}